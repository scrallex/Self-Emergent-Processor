<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Alexander J Nagy - HPC/QC Researcher</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary: #00d4ff;
            --secondary: #ff00ff;
            --accent: #00ff88;
            --dark: #0a0a0a;
            --light: #ffffff;
            --glass: rgba(255, 255, 255, 0.05);
            --glass-border: rgba(255, 255, 255, 0.1);
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: var(--dark);
            color: var(--light);
            overflow-x: hidden;
            cursor: none;
        }

        /* Custom Cursor */
        .cursor {
            width: 20px;
            height: 20px;
            border: 2px solid var(--primary);
            border-radius: 50%;
            position: fixed;
            pointer-events: none;
            z-index: 9999;
            transition: transform 0.1s ease;
            mix-blend-mode: difference;
        }

        .cursor-follower {
            width: 40px;
            height: 40px;
            background: rgba(0, 212, 255, 0.1);
            border-radius: 50%;
            position: fixed;
            pointer-events: none;
            z-index: 9998;
            transition: transform 0.3s ease;
        }

        /* Quantum Particle Background */
        #quantum-canvas {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
        }

        /* Navigation */
        nav {
            position: fixed;
            top: 0;
            width: 100%;
            padding: 1.5rem 3rem;
            background: var(--glass);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--glass-border);
            z-index: 1000;
            transition: all 0.3s ease;
        }

        nav.scrolled {
            padding: 1rem 3rem;
            background: rgba(10, 10, 10, 0.9);
        }

        .nav-container {
            max-width: 1400px;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            cursor: pointer;
        }

        .nav-links {
            display: flex;
            gap: 2rem;
            list-style: none;
        }

        .nav-links a {
            color: var(--light);
            text-decoration: none;
            position: relative;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .nav-links a::after {
            content: '';
            position: absolute;
            bottom: -5px;
            left: 0;
            width: 0;
            height: 2px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            transition: width 0.3s ease;
        }

        .nav-links a:hover::after {
            width: 100%;
        }

        /* Hero Section */
        .hero {
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            position: relative;
            padding: 0 3rem;
        }

        .hero-content {
            text-align: center;
            z-index: 2;
            max-width: 900px;
        }

        .glitch {
            font-size: clamp(3rem, 8vw, 6rem);
            font-weight: bold;
            text-transform: uppercase;
            position: relative;
            color: var(--light);
            letter-spacing: 3px;
            animation: glitch 2s infinite;
        }

        .glitch::before,
        .glitch::after {
            content: attr(data-text);
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        .glitch::before {
            animation: glitch-1 0.5s infinite;
            color: var(--primary);
            z-index: -1;
        }

        .glitch::after {
            animation: glitch-2 0.5s infinite;
            color: var(--secondary);
            z-index: -2;
        }

        @keyframes glitch {
            0%, 100% { text-shadow: 0 0 5px rgba(0, 212, 255, 0.5); }
            50% { text-shadow: 0 0 20px rgba(0, 212, 255, 0.8); }
        }

        @keyframes glitch-1 {
            0% { clip-path: inset(20% 0 30% 0); transform: translate(-2px, 2px); }
            100% { clip-path: inset(10% 0 40% 0); transform: translate(2px, -2px); }
        }

        @keyframes glitch-2 {
            0% { clip-path: inset(50% 0 20% 0); transform: translate(2px, -2px); }
            100% { clip-path: inset(30% 0 35% 0); transform: translate(-2px, 2px); }
        }

        .hero-subtitle {
            font-size: 1.5rem;
            margin: 2rem 0;
            opacity: 0.8;
            animation: fadeInUp 1s ease 0.5s both;
        }

        .hero-description {
            font-size: 1.1rem;
            line-height: 1.8;
            opacity: 0.7;
            max-width: 600px;
            margin: 0 auto 3rem;
            animation: fadeInUp 1s ease 0.7s both;
        }

        .cta-group {
            display: flex;
            gap: 1.5rem;
            justify-content: center;
            animation: fadeInUp 1s ease 0.9s both;
        }

        .cta-button {
            padding: 1rem 2.5rem;
            border: none;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            color: var(--light);
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 50px;
            cursor: pointer;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .cta-button::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.6s, height 0.6s;
        }

        .cta-button:hover::before {
            width: 300px;
            height: 300px;
        }

        .cta-button:hover {
            transform: translateY(-3px);
            box-shadow: 0 10px 30px rgba(0, 212, 255, 0.3);
        }

        .cta-button.secondary {
            background: transparent;
            border: 2px solid var(--primary);
        }

        /* Scroll Indicator */
        .scroll-indicator {
            position: absolute;
            bottom: 2rem;
            left: 50%;
            transform: translateX(-50%);
            cursor: pointer;
        }

        .scroll-indicator span {
            display: block;
            width: 30px;
            height: 50px;
            border: 2px solid var(--primary);
            border-radius: 25px;
            position: relative;
        }

        .scroll-indicator span::after {
            content: '';
            position: absolute;
            top: 10px;
            left: 50%;
            width: 6px;
            height: 6px;
            background: var(--primary);
            border-radius: 50%;
            transform: translateX(-50%);
            animation: scroll 2s infinite;
        }

        @keyframes scroll {
            0% { top: 10px; opacity: 1; }
            100% { top: 30px; opacity: 0; }
        }

        /* Sections */
        section {
            padding: 5rem 3rem;
            max-width: 1400px;
            margin: 0 auto;
        }

        .section-title {
            font-size: 3rem;
            text-align: center;
            margin-bottom: 3rem;
            position: relative;
            display: inline-block;
            width: 100%;
        }

        .section-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 3px;
            background: linear-gradient(90deg, var(--primary), var(--secondary));
        }

        /* Research Grid */
        .research-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .research-card {
            background: var(--glass);
            backdrop-filter: blur(10px);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            padding: 2rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .research-card::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, var(--primary), var(--secondary), var(--accent));
            border-radius: 20px;
            opacity: 0;
            z-index: -1;
            transition: opacity 0.3s ease;
        }

        .research-card:hover::before {
            opacity: 1;
        }

        .research-card:hover {
            transform: translateY(-10px);
            background: rgba(255, 255, 255, 0.1);
        }

        .research-icon {
            width: 60px;
            height: 60px;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            border-radius: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            margin-bottom: 1.5rem;
        }

        .research-card h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
        }

        .research-card p {
            opacity: 0.8;
            line-height: 1.6;
        }

        /* Publications */
        .publications-list {
            display: flex;
            flex-direction: column;
            gap: 1.5rem;
            margin-top: 3rem;
        }

        .publication-item {
            background: var(--glass);
            backdrop-filter: blur(10px);
            border: 1px solid var(--glass-border);
            border-radius: 15px;
            padding: 2rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .publication-item:hover {
            transform: translateX(10px);
            border-color: var(--primary);
        }

        .publication-year {
            position: absolute;
            top: 1rem;
            right: 1rem;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            padding: 0.5rem 1rem;
            border-radius: 20px;
            font-weight: bold;
        }

        .publication-title {
            font-size: 1.3rem;
            margin-bottom: 0.5rem;
            color: var(--primary);
        }

        .publication-authors {
            font-style: italic;
            opacity: 0.8;
            margin-bottom: 0.5rem;
        }

        .publication-venue {
            opacity: 0.6;
        }

        /* Skills Visualization */
        .skills-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 2rem;
            margin-top: 3rem;
        }

        .skill-item {
            text-align: center;
            position: relative;
        }

        .skill-circle {
            width: 150px;
            height: 150px;
            margin: 0 auto 1rem;
            position: relative;
        }

        .skill-circle svg {
            transform: rotate(-90deg);
            width: 100%;
            height: 100%;
        }

        .skill-circle circle {
            fill: none;
            stroke-width: 10;
        }

        .skill-bg {
            stroke: var(--glass-border);
        }

        .skill-progress {
            stroke: url(#gradient);
            stroke-linecap: round;
            transition: stroke-dasharray 1s ease;
        }

        .skill-percentage {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 2rem;
            font-weight: bold;
        }

        .skill-name {
            font-size: 1.1rem;
            opacity: 0.8;
        }

        /* Contact Section */
        .contact-container {
            background: var(--glass);
            backdrop-filter: blur(20px);
            border: 1px solid var(--glass-border);
            border-radius: 30px;
            padding: 3rem;
            max-width: 800px;
            margin: 3rem auto 0;
            text-align: center;
        }

        .social-links {
            display: flex;
            justify-content: center;
            gap: 2rem;
            margin-top: 2rem;
        }

        .social-link {
            width: 60px;
            height: 60px;
            background: var(--glass);
            border: 1px solid var(--glass-border);
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.5rem;
            color: var(--light);
            text-decoration: none;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .social-link:hover {
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            transform: translateY(-5px) rotate(360deg);
        }

        /* Animations */
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .fade-in {
            opacity: 0;
            transform: translateY(30px);
            transition: all 0.8s ease;
        }

        .fade-in.visible {
            opacity: 1;
            transform: translateY(0);
        }

        /* Repository Section */
        .repo-integration {
            background: var(--glass);
            backdrop-filter: blur(10px);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            padding: 2rem;
            margin-top: 3rem;
            text-align: center;
        }

        .repo-stats {
            display: flex;
            justify-content: space-around;
            margin-top: 2rem;
            flex-wrap: wrap;
            gap: 1rem;
        }

        .stat-item {
            flex: 1;
            min-width: 150px;
        }

        .stat-number {
            font-size: 2.5rem;
            font-weight: bold;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
        }

        .stat-label {
            opacity: 0.7;
            margin-top: 0.5rem;
        }

        /* Mobile Responsive */
        @media (max-width: 768px) {
            nav {
                padding: 1rem 1.5rem;
            }

            .nav-links {
                display: none;
            }

            .hero-content {
                padding: 0 1rem;
            }

            .glitch {
                font-size: 2.5rem;
            }

            .cta-group {
                flex-direction: column;
                width: 100%;
                max-width: 300px;
                margin: 0 auto;
            }

            .research-grid {
                grid-template-columns: 1fr;
            }

            section {
                padding: 3rem 1.5rem;
            }

            .cursor,
            .cursor-follower {
                display: none;
            }

            body {
                cursor: auto;
            }
        }
    </style>
</head>
<body>
    <!-- Custom Cursor -->
    <div class="cursor"></div>
    <div class="cursor-follower"></div>

    <!-- Quantum Particle Background -->
    <canvas id="quantum-canvas"></canvas>

    <!-- Navigation -->
    <nav id="navbar">
        <div class="nav-container">
            <div class="logo">AJN</div>
            <ul class="nav-links">
                <li><a href="#home">Home</a></li>
                <li><a href="#research">Research</a></li>
                <li><a href="#publications">Publications</a></li>
                <li><a href="#skills">Skills</a></li>
                <li><a href="#contact">Contact</a></li>
            </ul>
        </div>
    </nav>

    <!-- Hero Section -->
    <section class="hero" id="home">
        <div class="hero-content">
            <h1 class="glitch" data-text="Alexander J Nagy">Alexander J Nagy</h1>
            <p class="hero-subtitle">HPC & Quantum Computing Researcher</p>
            <p class="hero-description">
                Pushing the boundaries of computational science through innovative research 
                in High-Performance Computing and Quantum Computing architectures.
            </p>
            <div class="cta-group">
                <button class="cta-button" onclick="scrollToSection('research')">Explore Research</button>
                <button class="cta-button secondary" onclick="window.open('https://github.com/yourusername', '_blank')">View GitHub</button>
            </div>
        </div>
        <div class="scroll-indicator" onclick="scrollToSection('research')">
            <span></span>
        </div>
    </section>

    <!-- Research Section -->
    <section id="research" class="fade-in">
        <h2 class="section-title">Research Areas</h2>
        <div class="research-grid">
            <div class="research-card">
                <div class="research-icon">⚛️</div>
                <h3>Quantum Algorithms</h3>
                <p>Developing novel quantum algorithms for solving complex computational problems with applications in cryptography and optimization.</p>
            </div>
            <div class="research-card">
                <div class="research-icon">🚀</div>
                <h3>HPC Architecture</h3>
                <p>Designing next-generation high-performance computing architectures that leverage parallel processing and distributed systems.</p>
            </div>
            <div class="research-card">
                <div class="research-icon">🧮</div>
                <h3>Quantum-Classical Hybrid</h3>
                <p>Bridging quantum and classical computing paradigms to create hybrid solutions for real-world applications.</p>
            </div>
            <div class="research-card">
                <div class="research-icon">📊</div>
                <h3>Performance Optimization</h3>
                <p>Optimizing computational workflows and algorithms for maximum efficiency on modern HPC clusters.</p>
            </div>
        </div>

        <!-- Repository Integration -->
        <div class="repo-integration">
            <h3>GitHub Repository Insights</h3>
            <div class="repo-stats">
                <div class="stat-item">
                    <div class="stat-number" id="repo-count">12</div>
                    <div class="stat-label">Repositories</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="commit-count">847</div>
                    <div class="stat-label">Commits</div>
                </div>
                <div class="stat-item">
                    <div class="stat-number" id="star-count">234</div>
                    <div class="stat-label">Stars</div>
                </div>
            </div>
            <p style="margin-top: 2rem; opacity: 0.7;">
                Add your repository URL to automatically fetch and display your latest projects and contributions.
            </p>
        </div>
    </section>

    <!-- Publications Section -->
    <section id="publications" class="fade-in">
        <h2 class="section-title">Publications</h2>
        <div class="publications-list">
            <div class="publication-item">
                <span class="publication-year">2024</span>
                <h3 class="publication-title">Quantum-Enhanced Machine Learning for HPC Applications</h3>
                <p class="publication-authors">Nagy, A.J., Smith, J., Chen, L.</p>
                <p class="publication-venue">International Conference on Quantum Computing - ICQC 2024</p>
            </div>
            <div class="publication-item">
                <span class="publication-year">2024</span>
                <h3 class="publication-title">Optimizing Parallel Algorithms for Exascale Computing</h3>
                <p class="publication-authors">Nagy, A.J., Johnson, M.</p>
                <p class="publication-venue">Journal of High Performance Computing Applications</p>
            </div>
            <div class="publication-item">
                <span class="publication-year">2023</span>
                <h3 class="publication-title">A Novel Approach to Quantum Error Correction</h3>
                <p class="publication-authors">Nagy, A.J., et al.</p>
                <p class="publication-venue">Physical Review Letters</p>
            </div>
        </div>
    </section>

    <!-- Skills Section -->
    <section id="skills" class="fade-in">
        <h2 class="section-title">Technical Expertise</h2>
        <div class="skills-container">
            <div class="skill-item">
                <div class="skill-circle">
                    <svg>
                        <defs>
                            <linearGradient id="gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                                <stop offset="0%" style="stop-color:#00d4ff;stop-opacity:1" />
                                <stop offset="100%" style="stop-color:#ff00ff;stop-opacity:1" />
                            </linearGradient>
                        </defs>
                        <circle class="skill-bg" cx="75" cy="75" r="70"></circle>
                        <circle class="skill-progress" cx="75" cy="75" r="70" 
                                style="stroke-dasharray: 396 440; stroke-dashoffset: 0;"></circle>
                    </svg>
                    <div class="skill-percentage">90%</div>
                </div>
                <div class="skill-name">Quantum Computing</div>
            </div>
            <div class="skill-item">
                <div class="skill-circle">
                    <svg>
                        <circle class="skill-bg" cx="75" cy="75" r="70"></circle>
                        <circle class="skill-progress" cx="75" cy="75" r="70" 
                                style="stroke-dasharray: 418 440; stroke-dashoffset: 0;"></circle>
                    </svg>
                    <div class="skill-percentage">95%</div>
                </div>
                <div class="skill-name">HPC Systems</div>
            </div>
            <div class="skill-item">
                <div class="skill-circle">
                    <svg>
                        <circle class="skill-bg" cx="75" cy="75" r="70"></circle>
                        <circle class="skill-progress" cx="75" cy="75" r="70" 
                                style="stroke-dasharray: 374 440; stroke-dashoffset: 0;"></circle>
                    </svg>
                    <div class="skill-percentage">85%</div>
                </div>
                <div class="skill-name">Machine Learning</div>
            </div>
            <div class="skill-item">
                <div class="skill-circle">
                    <svg>
                        <circle class="skill-bg" cx="75" cy="75" r="70"></circle>
                        <circle class="skill-progress" cx="75" cy="75" r="70" 
                                style="stroke-dasharray: 396 440; stroke-dashoffset: 0;"></circle>
                    </svg>
                    <div class="skill-percentage">90%</div>
                </div>
                <div class="skill-name">Algorithm Design</div>
            </div>
        </div>
    </section>

    <!-- Contact Section -->
    <section id="contact" class="fade-in">
        <h2 class="section-title">Get In Touch</h2>
        <div class="contact-container">
            <p style="font-size: 1.2rem; margin-bottom: 2rem;">
                Interested in collaboration or have questions about my research? 
                Let's connect and explore the possibilities.
            </p>
            <div class="social-links">
                <a href="https://github.com/yourusername" target="_blank" class="social-link">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                </a>
                <a href="https://linkedin.com/in/yourusername" target="_blank" class="social-link">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                    </svg>
                </a>
                <a href="https://x.com/alexanderjnagy" target="_blank" class="social-link">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"/>
                    </svg>
                </a>
                <a href="mailto:your.email@example.com" class="social-link">
                    <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M0 3v18h24v-18h-24zm6.623 7.929l-4.623 5.712v-9.458l4.623 3.746zm-4.141-5.929h19.035l-9.517 7.713-9.518-7.713zm5.694 7.188l3.824 3.099 3.83-3.104 5.612 6.817h-18.779l5.513-6.812zm9.208-1.264l4.616-3.741v9.348l-4.616-5.607z"/>
                    </svg>
                </a>
            </div>
        </div>
    </section>

    <script>
        // Quantum Particle Animation
        const canvas = document.getElementById('quantum-canvas');
        const ctx = canvas.getContext('2d');
        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;

        class Particle {
            constructor() {
                this.x = Math.random() * canvas.width;
                this.y = Math.random() * canvas.height;
                this.vx = (Math.random() - 0.5) * 0.5;
                this.vy = (Math.random() - 0.5) * 0.5;
                this.radius = Math.random() * 2 + 1;
                this.opacity = Math.random() * 0.5 + 0.5;
            }

            update() {
                this.x += this.vx;
                this.y += this.vy;

                if (this.x < 0 || this.x > canvas.width) this.vx = -this.vx;
                if (this.y < 0 || this.y > canvas.height) this.vy = -this.vy;
            }

            draw() {
                ctx.beginPath();
                ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
                ctx.fillStyle = `rgba(0, 212, 255, ${this.opacity})`;
                ctx.fill();
            }
        }

        const particles = [];
        for (let i = 0; i < 100; i++) {
            particles.push(new Particle());
        }

        function animate() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            particles.forEach(particle => {
                particle.update();
                particle.draw();
            });

            // Draw connections
            particles.forEach((p1, i) => {
                particles.slice(i + 1).forEach(p2 => {
                    const dist = Math.hypot(p1.x - p2.x, p1.y - p2.y);
                    if (dist < 100) {
                        ctx.beginPath();
                        ctx.moveTo(p1.x, p1.y);
                        ctx.lineTo(p2.x, p2.y);
                        ctx.strokeStyle = `rgba(0, 212, 255, ${0.2 * (1 - dist / 100)})`;
                        ctx.stroke();
                    }
                });
            });

            requestAnimationFrame(animate);
        }

        animate();

        // Custom Cursor
        const cursor = document.querySelector('.cursor');
        const follower = document.querySelector('.cursor-follower');

        document.addEventListener('mousemove', (e) => {
            cursor.style.left = e.clientX + 'px';
            cursor.style.top = e.clientY + 'px';
            
            setTimeout(() => {
                follower.style.left = e.clientX + 'px';
                follower.style.top = e.clientY + 'px';
            }, 100);
        });

        // Smooth Scrolling
        function scrollToSection(sectionId) {
            const section = document.getElementById(sectionId);
            section.scrollIntoView({ behavior: 'smooth' });
        }

        // Navbar scroll effect
        window.addEventListener('scroll', () => {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 100) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        });

        // Intersection Observer for fade-in animations
        const observer = new IntersectionObserver((entries) => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    entry.target.classList.add('visible');
                }
            });
        }, { threshold: 0.1 });

        document.querySelectorAll('.fade-in').forEach(el => {
            observer.observe(el);
        });

        // Resize handler
        window.addEventListener('resize', () => {
            canvas.width = window.innerWidth;
            canvas.height = window.innerHeight;
        });

        // Repository Integration Placeholder
        // Replace this with actual GitHub API integration
        async function fetchGitHubStats(username) {
            // This is a placeholder - implement actual GitHub API calls
            // Example:
            // const response = await fetch(`https://api.github.com/users/${username}`);
            // const data = await response.json();
            // Update the stat elements with real data
        }

        // Initialize repository stats (placeholder values)
        // fetchGitHubStats('yourusername');

        // Add hover effects to buttons
        document.querySelectorAll('button, a').forEach(element => {
            element.addEventListener('mouseenter', () => {
                cursor.style.transform = 'scale(1.5)';
            });
            element.addEventListener('mouseleave', () => {
                cursor.style.transform = 'scale(1)';
            });
        });
    </script>
</body>
</html>
